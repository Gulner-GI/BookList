{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "RESTful API on gin and SQLite3 for listing books",
        "title": "BookList API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Gulner",
            "email": "yura.kuzin1990@gmail.com"
        },
        "version": "0.3"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/books": {
            "get": {
                "description": "Получает список всех книг, либо конкретную книгу по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Получение книг",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID книги для поиска",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Если ID не указан — возвращается список всех книг",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Book"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse400"
                        }
                    },
                    "404": {
                        "description": "Книга не найдена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse404"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse500"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет книгу в базу данных. Поле link опционально, можно удалить",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Добавить новую книгу",
                "parameters": [
                    {
                        "description": "Данные новой книги",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse400"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse500"
                        }
                    }
                }
            },
            "options": {
                "description": "Возвращает список доступных методов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "OPTIONS-запрос к /books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "head": {
                "description": "Возвращает только заголовки, без тела. Используется для проверки доступности /books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "HEAD-запрос для проверки доступности ресурса",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "delete": {
                "description": "Удаляет книгу из базы данных по её ID",
                "tags": [
                    "books"
                ],
                "summary": "Удалить книгу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID книги",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Книга удалена"
                    },
                    "400": {
                        "description": "Некорректный ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse400"
                        }
                    },
                    "404": {
                        "description": "Книга не найдена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse404"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse500"
                        }
                    }
                }
            },
            "patch": {
                "description": "Обновляет информацию о книге. Все поля опциональны (удалите нежелательные). Жанр должен быть из допустимого списка: Fantasy, Sci-FI, Science, Non-Fiction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Обновить книгу",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID книги",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления книги",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновлённая книга",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse400"
                        }
                    },
                    "404": {
                        "description": "Книга не найдена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse404"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Book": {
            "type": "object",
            "properties": {
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorResponse400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Некорректный ID"
                }
            }
        },
        "models.ErrorResponse404": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Книга не найдена"
                }
            }
        },
        "models.ErrorResponse500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Внутренняя ошибка сервера"
                }
            }
        },
        "models.Update": {
            "type": "object",
            "properties": {
                "genre": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    }
}